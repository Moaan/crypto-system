This was doen CSC 650 HW: Cryptosystem

This program should run exactly the same on Windows and Linux. 
Although I didn't do extensive testing, it seems to work flawlessly.
However, I can't say if it is a stronger encryption, I might have even made it weaker.

How does it encrypt? 
It uses exclusive-or operation on each char with "random" chars generated from the password.
Because the "random" numbers are seeded/generated by the password, they'll be the same each time (for encryption/decryption).
Also the seed itself is generated in a different way(also depending on password): 
	int seedAddition = key[0]; 
	for(i=0; key[i]; i++) seed = (seed + seedAddition)*key[i];
	srand(seed);
I don't know if that really makes a difference. It could possible make the encryption weaker or stronger.
Lastly, there is now a swap that swaps the characters of the buffer such that if a buffer 
contained: ['g','o','o','d',' ','b','y','e'] it will be changed to: ['e','y','b',' ','d','o','o','g'].
This does not diffuse, but it can confuse. Perhaps I can add a transposition element later.

How to run it:
Now, it depends on whether you want to encrypt or decrypt. 
Say you name the executable "c"

Encryption:
Linux: ./c -e file1 file2
Windows:c -e file1 file2

Decryption:
Linux: ./c -d file2 file3
Windows:c -d file2 file3

Feel free to suggest improvements especially concerning the transposition. 
Ideally, the char order swapping should be removed.

Enjoy


